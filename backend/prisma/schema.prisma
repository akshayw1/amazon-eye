// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String
  role      Role      @default(CUSTOMER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[] // Products created by the user (as seller)
}

model Product {
  id          String       @id @default(uuid())
  name        String
  description String
  price       Float
  stock       Int
  images      String[]     // Array of image URLs
  category    String
  sellerId    String       // Reference to the seller (User)
  seller      User         @relation(fields: [sellerId], references: [id])
  reviewInfos ReviewInfo[] // Detailed reviews for this product
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  
  // Additional fields from JSON data
  originalProductId Int?    @map("product_ID") // Original numeric product ID
  fakeProbability  Float?   @map("fake_score") // Probability of being fake
  trustScore       Float?   @map("trust_score") // Trust score from original data
  reviewCount      Int?     @map("n_of_reviews") // Number of reviews
  averageRating    Float?   @map("avg_review_rating") // Average review rating

  @@index([sellerId])
}

model ReviewInfo {
  id              String   @id @default(uuid())
  reviewRating    Int      // Review score (1 to 5 stars)
  numberOfHelpful Int      // Number of helpful votes
  reviewBody      String   // Full review text
  reviewTitle     String   // Title of the review
  reviewDate      DateTime // Date the review was posted
  productId       String   // Product ID associated with the review
  reviewerId      String   // Unique reviewer identifier as String
  
  // Additional fields from JSON data
  isAiGenerated   Boolean? @map("ai_generated") // Whether the review is AI generated
  aiGeneratedScore Float?  @map("generated_score") // AI generation probability score
  
  // Relations
  product         Product  @relation(fields: [productId], references: [id])
  
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@index([productId])
  @@map("review_info")
}

enum Role {
  USER
  ADMIN
  CUSTOMER
  SELLER
}
